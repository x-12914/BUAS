{"ast":null,"code":"import React,{useState,useEffect}from'react';import StatusBar from'./StatusBar';import UserList from'./UserList';import AudioPlayer from'./AudioPlayer';import ConnectionStatus from'./ConnectionStatus';import ApiService from'../services/api';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{// State Management\nconst[dashboardData,setDashboardData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[isPolling,setIsPolling]=useState(true);const[lastUpdated,setLastUpdated]=useState(null);const[connectionStatus,setConnectionStatus]=useState('connecting');const[selectedUser,setSelectedUser]=useState(null);const[currentAudio,setCurrentAudio]=useState(null);// Polling function\nconst fetchDashboardData=async()=>{try{// First check if server is healthy\ntry{await ApiService.getHealthCheck();}catch(healthError){console.warn('Health check failed, but attempting dashboard data fetch...');}const data=await ApiService.getDashboardData();setDashboardData(data);setConnectionStatus(data.connection_status||'connected');setLastUpdated(new Date());setError(null);}catch(err){console.error('Failed to fetch dashboard data:',err);setError(err.message);setConnectionStatus('error');}finally{setLoading(false);}};// Real-time Polling with 2-second intervals\nuseEffect(()=>{let pollInterval;if(isPolling){// Initial fetch\nfetchDashboardData();// Set up polling\npollInterval=setInterval(fetchDashboardData,2000);}return()=>{if(pollInterval){clearInterval(pollInterval);}};},[isPolling]);// Handle user actions\nconst handleStartListening=async userId=>{try{await ApiService.startListening(userId);// Refresh data to get updated status\nawait fetchDashboardData();}catch(err){console.error('Failed to start listening:',err);}};const handleStopListening=async userId=>{try{await ApiService.stopListening(userId);// Refresh data to get updated status\nawait fetchDashboardData();}catch(err){console.error('Failed to stop listening:',err);}};const handlePlayAudio=async user=>{try{if(user.latest_audio){// Use API service base URL for consistency\nconst apiBaseUrl=process.env.NODE_ENV==='production'?'http://143.244.133.125:5000':'http://localhost:5000';setCurrentAudio({url:\"\".concat(apiBaseUrl).concat(user.latest_audio),user:user.user_id,filename:user.latest_audio.split('/').pop()});}}catch(err){console.error('Failed to play audio:',err);}};const handleCloseAudio=()=>{setCurrentAudio(null);};const togglePolling=()=>{setIsPolling(!isPolling);};if(loading&&!dashboardData){return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard dark-theme\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading BUAS Dashboard...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard dark-theme\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83E\\uDD87 BUAS Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-controls\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"polling-toggle \".concat(isPolling?'active':''),onClick:togglePolling,children:[isPolling?'⏸️':'▶️',isPolling?'Pause Updates':'Resume Updates']}),/*#__PURE__*/_jsxs(\"div\",{className:\"polling-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"indicator-dot \".concat(isPolling?'active':'')}),/*#__PURE__*/_jsx(\"span\",{children:\"Live Updates\"})]})]})]})}),/*#__PURE__*/_jsx(StatusBar,{data:dashboardData,connectionStatus:connectionStatus,lastUpdated:lastUpdated,error:error}),/*#__PURE__*/_jsx(\"main\",{className:\"dashboard-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-main\",children:[/*#__PURE__*/_jsx(ConnectionStatus,{status:connectionStatus,lastUpdated:lastUpdated,isPolling:isPolling}),/*#__PURE__*/_jsx(UserList,{users:(dashboardData===null||dashboardData===void 0?void 0:dashboardData.users)||[],loading:loading,onPlayAudio:handlePlayAudio,onStartListening:handleStartListening,onStopListening:handleStopListening,selectedUser:selectedUser,onUserSelect:setSelectedUser})]})}),currentAudio&&/*#__PURE__*/_jsx(AudioPlayer,{audio:currentAudio,onClose:handleCloseAudio}),/*#__PURE__*/_jsx(\"footer\",{className:\"dashboard-footer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"footer-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"BUAS Dashboard v1.0.0 | Last Updated: \",lastUpdated===null||lastUpdated===void 0?void 0:lastUpdated.toLocaleTimeString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Connected Users: \",(dashboardData===null||dashboardData===void 0?void 0:dashboardData.total_users)||0,\" | Active Sessions: \",(dashboardData===null||dashboardData===void 0?void 0:dashboardData.active_sessions_count)||0]})]})})]});};export default Dashboard;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}