{"ast":null,"code":"import _objectSpread from\"/home/opt/BUAS/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Smart environment detection for robust deployment\nconst getApiUrl=()=>{// For production build, use hardcoded VPS IP to avoid DNS issues\nif(process.env.NODE_ENV==='production'){return process.env.REACT_APP_VPS_URL||'http://143.244.133.125:5000';}// For development, use environment variable or localhost fallback\nreturn process.env.REACT_APP_API_URL||'http://localhost:5000';};const API_BASE_URL=getApiUrl();const AUTH_USERNAME=process.env.REACT_APP_AUTH_USERNAME||'admin';const AUTH_PASSWORD=process.env.REACT_APP_AUTH_PASSWORD||'supersecret';const AUTH_HEADER='Basic '+btoa(\"\".concat(AUTH_USERNAME,\":\").concat(AUTH_PASSWORD));class ApiService{constructor(){let baseURL=arguments.length>0&&arguments[0]!==undefined?arguments[0]:API_BASE_URL;this.baseURL=baseURL;this.authHeader=AUTH_HEADER;}async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(this.baseURL).concat(endpoint);const config=_objectSpread({mode:'cors',credentials:'omit',headers:_objectSpread({'Content-Type':'application/json','Authorization':this.authHeader,'Accept':'application/json'},options.headers)},options);try{const response=await fetch(url,config);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error(\"API request failed for \".concat(endpoint,\":\"),error);// Return fallback data for dashboard\nif(endpoint==='/api/dashboard-data'){return{active_sessions_count:0,total_users:0,connection_status:'error',users:[],active_sessions:[],stats:{total_users:0,active_sessions:0,total_recordings:0},error:error.message,last_updated:new Date().toISOString()};}throw error;}}async getDashboardData(){return this.request('/api/dashboard-data');}async getHealthCheck(){return this.request('/api/health');}async startListening(userId){return this.request(\"/api/start-listening/\".concat(userId),{method:'POST'});}async stopListening(userId){return this.request(\"/api/stop-listening/\".concat(userId),{method:'POST'});}async getLatestAudio(deviceId){return this.request(\"/api/audio/\".concat(deviceId,\"/latest\"));}}export default new ApiService();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}