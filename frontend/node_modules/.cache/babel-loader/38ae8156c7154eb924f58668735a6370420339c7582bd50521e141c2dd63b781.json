{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import'./AudioPlayer.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const AudioPlayer=_ref=>{let{audio,onClose}=_ref;const audioRef=useRef(null);const[isPlaying,setIsPlaying]=useState(false);const[currentTime,setCurrentTime]=useState(0);const[duration,setDuration]=useState(0);const[volume,setVolume]=useState(0.7);useEffect(()=>{const audioElement=audioRef.current;if(!audioElement)return;const handleLoadedMetadata=()=>{setDuration(audioElement.duration);};const handleTimeUpdate=()=>{setCurrentTime(audioElement.currentTime);};const handleEnded=()=>{setIsPlaying(false);setCurrentTime(0);};audioElement.addEventListener('loadedmetadata',handleLoadedMetadata);audioElement.addEventListener('timeupdate',handleTimeUpdate);audioElement.addEventListener('ended',handleEnded);// Auto-play when component mounts\naudioElement.play().then(()=>{setIsPlaying(true);}).catch(err=>{console.error('Error auto-playing audio:',err);});return()=>{audioElement.removeEventListener('loadedmetadata',handleLoadedMetadata);audioElement.removeEventListener('timeupdate',handleTimeUpdate);audioElement.removeEventListener('ended',handleEnded);};},[audio.url]);const togglePlayPause=()=>{const audioElement=audioRef.current;if(!audioElement)return;if(isPlaying){audioElement.pause();setIsPlaying(false);}else{audioElement.play().then(()=>{setIsPlaying(true);}).catch(err=>{console.error('Error playing audio:',err);});}};const handleSeek=e=>{const audioElement=audioRef.current;if(!audioElement)return;const rect=e.currentTarget.getBoundingClientRect();const x=e.clientX-rect.left;const percentage=x/rect.width;const newTime=percentage*duration;audioElement.currentTime=newTime;setCurrentTime(newTime);};const handleVolumeChange=e=>{const newVolume=parseFloat(e.target.value);setVolume(newVolume);const audioElement=audioRef.current;if(audioElement){audioElement.volume=newVolume;}};const formatTime=time=>{if(isNaN(time))return'0:00';const minutes=Math.floor(time/60);const seconds=Math.floor(time%60);return\"\".concat(minutes,\":\").concat(seconds.toString().padStart(2,'0'));};const progressPercentage=duration>0?currentTime/duration*100:0;return/*#__PURE__*/_jsx(\"div\",{className:\"audio-player-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"audio-player\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"audio-player-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"audio-info\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"audio-title\",children:[\"\\uD83C\\uDFB5 \",audio.filename]}),/*#__PURE__*/_jsxs(\"p\",{className:\"audio-user\",children:[\"Device: \",audio.user]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:onClose,children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,src:audio.url,volume:volume,onError:e=>{console.error('Audio error:',e);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"audio-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"play-pause-button\",onClick:togglePlayPause,children:isPlaying?'⏸️':'▶️'}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"time-display current-time\",children:formatTime(currentTime)}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar\",onClick:handleSeek,children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(progressPercentage,\"%\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-thumb\",style:{left:\"\".concat(progressPercentage,\"%\")}})]}),/*#__PURE__*/_jsx(\"span\",{className:\"time-display duration\",children:formatTime(duration)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"volume-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"volume-icon\",children:\"\\uD83D\\uDD0A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"1\",step:\"0.1\",value:volume,onChange:handleVolumeChange,className:\"volume-slider\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"audio-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>{const audioElement=audioRef.current;if(audioElement){audioElement.currentTime=0;setCurrentTime(0);}},children:\"\\u23EE\\uFE0F Restart\"}),/*#__PURE__*/_jsx(\"a\",{href:audio.url,download:audio.filename,className:\"btn btn-primary\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDCBE Download\"})]})]})});};export default AudioPlayer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}